{"version":3,"sources":["../src/HumanAgent.js"],"names":["module","exports","opts","undefined","bot","lib","dialog","session","args","body","pick","assign","orientation","msg_id","v1","message","text","trim","toUpperCase","send","commit","type","who","address","user","id","endDialog","referer","replaceDialog"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC3B,QAAGA,QAAQC,SAAR,IAAqBD,KAAKE,GAAL,IAAYD,SAApC,EAA8C;AAC1C,cAAM,6BAAN;AACH;;AAED,QAAIE,MAAM,wBAAY,aAAZ,CAAV;;AAEAA,QAAIC,MAAJ,CAAW,GAAX,EAAgB,UAASC,OAAT,EAAkBC,IAAlB,EAAuB;AACnC,YAAIC,OAAO,iBAAEC,IAAF,CAAOH,OAAP,EAAgB,CAAC,SAAD,EAAY,kBAAZ,EAAgC,yBAAhC,EAA2D,cAA3D,EAA2E,UAA3E,CAAhB,CAAX;AACAE,eAAO,iBAAEE,MAAF,CAASF,IAAT,EAAe;AAClBG,yBAAa,CADK;AAElBC,oBAAQ,mBAAKC,EAAL;AAFU,SAAf,CAAP;AAIA,YAAGP,QAAQQ,OAAR,CAAgBC,IAAhB,IAAwBb,SAAxB,IAAqCI,QAAQQ,OAAR,CAAgBC,IAAhB,CAAqBC,IAArB,GAA4BC,WAA5B,MAA6C,GAArF,EAAyF;AACrFX,oBAAQY,IAAR,CAAa,mBAAb;AACA,gCAAUC,MAAV,CAAiB;AACbC,sBAAM,YADO;AAEbC,qBAAKf,QAAQQ,OAAR,CAAgBQ,OAAhB,CAAwBC,IAAxB,CAA6BC,EAFrB;AAGbhB,sBAAMA;AAHO,aAAjB,EAIG,CAJH;AAKAF,oBAAQmB,SAAR;AACH,SARD,MAQO,IAAGlB,QAAQL,SAAR,IAAqBK,KAAKmB,OAAL,IAAgB,QAAxC,EAAkD;AACrD;AACA,gCAAUP,MAAV,CAAiB;AACbC,sBAAM,aADO;AAEbC,qBAAKf,QAAQQ,OAAR,CAAgBQ,OAAhB,CAAwBC,IAAxB,CAA6BC,EAFrB;AAGbhB,sBAAMA;AAHO,aAAjB,EAIG,CAJH;AAKH,SAPM,MAOA;AACH;AACA,gCAAUW,MAAV,CAAiB;AACbC,sBAAM,eADO;AAEbC,qBAAKf,QAAQQ,OAAR,CAAgBQ,OAAhB,CAAwBC,IAAxB,CAA6BC,EAFrB;AAGbhB,sBAAMA;AAHO,aAAjB,EAIG,CAJH;AAKH;AACJ,KA7BD;;AA+BAJ,QAAIC,MAAJ,CAAW,QAAX,EAAqB,UAASC,OAAT,EAAkBC,IAAlB,EAAuB;AACxCD,gBAAQY,IAAR,CAAa,sCAAb;AACAZ,gBAAQqB,aAAR,CAAsB,GAAtB,EAA2B;AACvBD,qBAAS;AADc,SAA3B;AAGH,KALD;;AAOA,WAAOtB,GAAP;AACH,CA9CD","file":"HumanAgent.js","sourcesContent":["\"use strict\";\r\n\r\nimport _ from 'lodash';\r\nimport uuid from 'node-uuid';\r\nimport {Message, Library, SimpleDialog} from 'botbuilder';\r\nimport HttpProxy from './HttpProxy';\r\n\r\nmodule.exports = function(opts){\r\n    if(opts == undefined || opts.bot == undefined){\r\n        throw 'Paramter \\'bot\\' not found.';\r\n    }\r\n\r\n    var lib = new Library('human_agent');\r\n\r\n    lib.dialog('/', function(session, args){\r\n        let body = _.pick(session, ['message', 'conversationData', 'privateConversationData', 'sessionState', 'userData']);\r\n        body = _.assign(body, {\r\n            orientation: 1,\r\n            msg_id: uuid.v1()\r\n        });\r\n        if(session.message.text != undefined && session.message.text.trim().toUpperCase() == 'Q'){\r\n            session.send('Stop Human Agent.');\r\n            HttpProxy.commit({\r\n                type: 'stop_agent',\r\n                who: session.message.address.user.id,\r\n                body: body\r\n            }, 2);\r\n            session.endDialog();\r\n        } else if(args != undefined && args.referer == '/start') {\r\n            // notifying the instflow server that started a new dialog\r\n            HttpProxy.commit({\r\n                type: 'start_agent',\r\n                who: session.message.address.user.id,\r\n                body: body\r\n            }, 2);\r\n        } else {\r\n            // talk\r\n            HttpProxy.commit({\r\n                type: 'agent_message',\r\n                who: session.message.address.user.id,\r\n                body: body\r\n            }, 2);\r\n        }\r\n    });\r\n\r\n    lib.dialog('/start', function(session, args){\r\n        session.send('Start Human Agent (Enter Q to exit):');\r\n        session.replaceDialog('/', {\r\n            referer: '/start'\r\n        });\r\n    });\r\n\r\n    return lib;\r\n};"]}